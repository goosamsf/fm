!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FIELD_DESCRIPTION!XML	uri	/uri associated with name prefix/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!PlistXML	k,key	/keys/
!_TAG_KIND_DESCRIPTION!XML	i,id	/id attributes/
!_TAG_KIND_DESCRIPTION!XML	n,nsprefix	/namespace prefixes/
!_TAG_KIND_DESCRIPTION!XML	r,root	/root elements/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PARSER_VERSION!PlistXML	0.0	/current.age/
!_TAG_PARSER_VERSION!XML	0.0	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/jun/school/sp/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	//
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
.c.o	Makefile	/^.c.o:$/;"	t
CC	Makefile	/^CC = gcc -g -Wall -Werror -pedantic$/;"	m
CFBundleDevelopmentRegion	fm.dSYM/Contents/Info.plist	/^		<key>CFBundleDevelopmentRegion<\/key>$/;"	k
CFBundleIdentifier	fm.dSYM/Contents/Info.plist	/^		<key>CFBundleIdentifier<\/key>$/;"	k
CFBundleInfoDictionaryVersion	fm.dSYM/Contents/Info.plist	/^		<key>CFBundleInfoDictionaryVersion<\/key>$/;"	k
CFBundlePackageType	fm.dSYM/Contents/Info.plist	/^		<key>CFBundlePackageType<\/key>$/;"	k
CFBundleShortVersionString	fm.dSYM/Contents/Info.plist	/^		<key>CFBundleShortVersionString<\/key>$/;"	k
CFBundleSignature	fm.dSYM/Contents/Info.plist	/^		<key>CFBundleSignature<\/key>$/;"	k
CFBundleVersion	fm.dSYM/Contents/Info.plist	/^		<key>CFBundleVersion<\/key>$/;"	k
NCURSES_CFLAGS	Makefile	/^NCURSES_CFLAGS = `pkg-config --cflags ncursesw`$/;"	m
NCURSES_LIBS	Makefile	/^NCURSES_LIBS =  `pkg-config --libs ncursesw`$/;"	m
OBJS	Makefile	/^OBJS = $(SRCS: .c = .o)$/;"	m
PROG	Makefile	/^PROG = fm $/;"	m
SRCS	Makefile	/^SRCS = fm.c$/;"	m
Wed Apr  3 19:06:32 PDT 2024	REPORT.md	/^### Wed Apr  3 19:06:32 PDT 2024$/;"	S
Wed Apr 10 16:18:09 PDT 2024	REPORT.md	/^### Wed Apr 10 16:18:09 PDT 2024$/;"	S
all	Makefile	/^all: $(OJBS) $/;"	t
c_menumax	fm.c	/^int c_menumax;$/;"	v	typeref:typename:int
ch_menumax	fm.c	/^int ch_menumax;$/;"	v	typeref:typename:int
child	fm.h	/^  char **child;$/;"	m	struct:curr_node	typeref:typename:char **
child_level	fm.c	/^char ** child_level;$/;"	v	typeref:typename:char **
child_win	fm.c	/^WINDOW *child_win;$/;"	v	typeref:typename:WINDOW *
clean	Makefile	/^clean:$/;"	t
compare_node	fm.c	/^int compare_node(const void *a, const void *b){$/;"	f	typeref:typename:int
compare_string	fm.c	/^int compare_string(const void *a, const void *b){$/;"	f	typeref:typename:int
con_ch_files	fm.c	/^char **con_ch_files(char *filename){$/;"	f	typeref:typename:char **
con_files	fm.c	/^void con_files(char *path){$/;"	f	typeref:typename:void
con_pa_files	fm.c	/^char **con_pa_files(char *filename){$/;"	f	typeref:typename:char **
curr_level	fm.c	/^curr_node* curr_level;$/;"	v	typeref:typename:curr_node *
curr_node	fm.h	/^typedef struct curr_node {$/;"	s
curr_node	fm.h	/^} curr_node;$/;"	t	typeref:struct:curr_node
curr_win	fm.c	/^WINDOW *curr_win;$/;"	v	typeref:typename:WINDOW *
draw_child_level	fm.c	/^void draw_child_level(int item){$/;"	f	typeref:typename:void
draw_curr_level	fm.c	/^void draw_curr_level(int item){$/;"	f	typeref:typename:void
draw_paren_level	fm.c	/^void draw_paren_level(char *parent){$/;"	f	typeref:typename:void
get_num_files	fm.c	/^int get_num_files(char * path){$/;"	f	typeref:typename:int
hi_parent	fm.c	/^char *hi_parent;$/;"	v	typeref:typename:char *
hidden	fm.h	/^  char **hidden;$/;"	m	struct:curr_node	typeref:typename:char **
is_dir	fm.c	/^int is_dir(char *filename){$/;"	f	typeref:typename:int
main	fm.c	/^int main(void){$/;"	f	typeref:typename:int
main	test/test.c	/^int main (){$/;"	f	typeref:typename:int
name	fm.h	/^  char *name;$/;"	m	struct:curr_node	typeref:typename:char *
num_files	fm.h	/^  int num_files;$/;"	m	struct:curr_node	typeref:typename:int
num_hidden_files	fm.h	/^  int num_hidden_files;$/;"	m	struct:curr_node	typeref:typename:int
p_menumax	fm.c	/^int p_menumax;$/;"	v	typeref:typename:int
paren_win	fm.c	/^WINDOW *paren_win;$/;"	v	typeref:typename:WINDOW *
parent	fm.h	/^  char **parent;$/;"	m	struct:curr_node	typeref:typename:char **
parent_level	fm.c	/^char ** parent_level;$/;"	v	typeref:typename:char **
print_level	fm.c	/^void print_level(char** level, int num){$/;"	f	typeref:typename:void
update_curr_level	fm.c	/^void update_curr_level(void){$/;"	f	typeref:typename:void

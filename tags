!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CC	Makefile	/^CC = gcc -g -Wall -Werror -pedantic$/;"	m
CC_2	Makefile	/^CC_2 = gcc -g -Wall -pedantic$/;"	m
DEFAULT_DST_LEN	marking.h	2;"	d
DEFAULT_NUM_SRC	marking.h	3;"	d
DEFAULT_SRC_LEN	marking.h	1;"	d
FM_H	fm.h	2;"	d
HTABLE_SIZE	htable.h	1;"	d
NCURSES_CFLAGS	Makefile	/^NCURSES_CFLAGS = `pkg-config --cflags ncursesw`$/;"	m
NCURSES_LIBS	Makefile	/^NCURSES_LIBS =  `pkg-config --libs ncursesw`$/;"	m
OBJS	Makefile	/^OBJS = $(SRCS: .c = .o)$/;"	m
PROG	Makefile	/^PROG = fm $/;"	m
SRCS	Makefile	/^SRCS = fm.c marking.c htable.c rename.c$/;"	m
WHATPAIR	fm.h	19;"	d
c_menumax	fm.c	/^int c_menumax;$/;"	v
cdHandler	fm.c	/^void cdHandler(char* cwd, char* path){$/;"	f
ch_menumax	fm.c	/^int ch_menumax;$/;"	v
child	fm.h	/^  char **child;$/;"	m	struct:curr_node
child_level	fm.c	/^char ** child_level;$/;"	v
child_win	fm.c	/^WINDOW *child_win;$/;"	v
color_map	fm.c	/^unsigned char color_map[256] = {0};$/;"	v
command	marking.h	/^  char command;$/;"	m	struct:marked_t
compare_node	fm.c	/^int compare_node(const void *a, const void *b){$/;"	f
compare_string	fm.c	/^int compare_string(const void *a, const void *b){$/;"	f
con_ch_files	fm.c	/^char **con_ch_files(char *path){$/;"	f
con_files	fm.c	/^void con_files(char *path){$/;"	f
con_pa_files	fm.c	/^char **con_pa_files(char * path, int *p_index){$/;"	f
cp_button	fm.c	/^WINDOW *cp_button;$/;"	v
curr_level	fm.c	/^curr_node* curr_level;$/;"	v
curr_node	fm.h	/^typedef struct curr_node {$/;"	s
curr_node	fm.h	/^} curr_node;$/;"	t	typeref:struct:curr_node
curr_win	fm.c	/^WINDOW *curr_win;$/;"	v
debugHtable	htable.c	/^void debugHtable(char** ht){$/;"	f
debugMarking	marking.c	/^void debugMarking(marked_t *mark){$/;"	f
deleteAll	marking.c	/^void deleteAll(marked_t *marking, char** htable){$/;"	f
deletePrompt	fm.c	/^int deletePrompt(marked_t *marking){$/;"	f
displayCurrPath	fm.c	/^void displayCurrPath(void){$/;"	f
draw_child_level	fm.c	/^void draw_child_level(char c, int item, char *cwd, char **htable, marked_t *marking){$/;"	f
draw_curr_level	fm.c	/^void draw_curr_level(char c, int item,  char** htable, marked_t *marking){$/;"	f
draw_menu_item	fm.c	/^void draw_menu_item(int i, WINDOW *prompt, int sub_h, int sub_w, int sub_y, int sub_x){$/;"	f
draw_paren_level	fm.c	/^void draw_paren_level(int *p_ind){$/;"	f
dst	marking.h	/^  char* dst;$/;"	m	struct:marked_t
executeCommand	marking.c	/^void executeCommand(marked_t *marking, char** htable, char**env){$/;"	f
fileflag	fm.h	/^  int fileflag;$/;"	m	struct:curr_node
freeResources	marking.c	/^void freeResources(marked_t *marking, char** htable){$/;"	f
get_num_files	fm.c	/^void get_num_files(char * path, num_files_t *numfiles){$/;"	f
hash	htable.c	/^unsigned int hash(char * s){$/;"	f
hiddens	fm.h	/^  char **hiddens;$/;"	m	struct:curr_node
ht2marking	fm.c	/^void ht2marking(marked_t *marking, char**htable){$/;"	f
htableClear	htable.c	/^void htableClear(char** htable){$/;"	f
htableInsert	htable.c	/^void htableInsert(char * s, char**htable){$/;"	f
htableLookup	htable.c	/^int htableLookup(char *s, char**htable){$/;"	f
init_htable	htable.c	/^char **init_htable(void){$/;"	f
init_marked	marking.c	/^marked_t *init_marked(void){$/;"	f
is_dir	fm.c	/^int is_dir(char *filename){$/;"	f
main	fm.c	/^int main(int argc, char* argv[]){$/;"	f
marked_t	marking.h	/^typedef struct marked_t{$/;"	s
marked_t	marking.h	/^} marked_t;$/;"	t	typeref:struct:marked_t
name	fm.h	/^  char *name;$/;"	m	struct:curr_node
nf	fm.h	/^  int nf;$/;"	m	struct:curr_node
nf	fm.h	/^  int nf;$/;"	m	struct:num_files_t
nh	fm.h	/^  int nh;$/;"	m	struct:curr_node
nh	fm.h	/^  int nh;$/;"	m	struct:num_files_t
num	marking.h	/^  int num;$/;"	m	struct:marked_t
num_files_t	fm.h	/^typedef struct num_files_t{$/;"	s
num_files_t	fm.h	/^} num_files_t;$/;"	t	typeref:struct:num_files_t
openTextEditor	fm.c	/^void openTextEditor(char *filename){$/;"	f
p_menumax	fm.c	/^int p_menumax;$/;"	v
paren_win	fm.c	/^WINDOW *paren_win;$/;"	v
parent	fm.h	/^  char **parent;$/;"	m	struct:curr_node
parent_level	fm.c	/^char ** parent_level;$/;"	v
print_level	fm.c	/^void print_level(char** level, int num){$/;"	f
ready2fire	marking.c	/^char **ready2fire(marked_t *mark, char **htable){$/;"	f
renameHandler	rename.c	/^void renameHandler(char *cwd){$/;"	f
showFileContents	fm.c	/^void showFileContents(char *filename){$/;"	f
src	marking.h	/^  char* src[DEFAULT_NUM_SRC];$/;"	m	struct:marked_t
updateMarking	marking.c	/^void updateMarking(marked_t *mark, char newcommand, char *cwd, char **htable){$/;"	f
update_curr_level	fm.c	/^void update_curr_level(int *p_index){$/;"	f
